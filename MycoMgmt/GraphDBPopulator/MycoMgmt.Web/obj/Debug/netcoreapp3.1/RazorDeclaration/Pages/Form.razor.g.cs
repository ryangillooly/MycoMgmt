#pragma checksum "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "666b9ddd9034064c76f53bf04524d8987b9dc831"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MycoMgmt.Web.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using MycoMgmt.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\_Imports.razor"
using MycoMgmt.Web.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor"
using MycoMgmt.Populator.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor"
using Neo4j.Driver;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor"
using MycoMgmt.API.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor"
using MycoMgmt.API;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor"
using MycoMgmt.Populator;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/culture/new")]
    public partial class Form : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 83 "C:\Users\ryang\Documents\GitHub\MycoMgmt\MycoMgmt\GraphDBPopulator\MycoMgmt.Web\Pages\Form.razor"
 
    static IDriver driver = GraphDatabase.Driver("neo4j://localhost:7687", AuthTokens.Basic("test", "test"));
    public IAsyncSession session = driver.AsyncSession(o => o.WithDatabase("test"));
    
    public class Created
    {
        public DateTime On { get; set; }
        public Users By { get; set; }
    }
    
    public class Modified
    {
        public DateTime On { get; set; }
        public Users By { get; set; }
    }
    
    public static class Extensions
    {
        public static IList<IRecord> WriteToDatabase(IAsyncSession session, string query) =>
            session.ExecuteWriteAsync(async tx => {
                var r = await tx.RunAsync(query);
                return await r.ToListAsync();
            }).Result;

        public static IList<IRecord> ReadFromDatabase(IAsyncSession session, string query) =>
            session.ReadTransactionAsync(async tx => {
                var r = await tx.RunAsync(query);
                return await r.ToListAsync();
            }).Result;

        public static string IsSuccessful(Culture culture)
        {
            return culture.Finished switch
            {
                true when culture.Successful => "Successful",
                true when !culture.Successful => "Failed",
                _ => ""
            };
        }
    }
    private Culture culture { get; set; } = new Culture();

    private void onvalidsubmitcode()
    {
        var obj = new
        {
            cultureName  = culture.Name,
            cultureType  = ":" + culture.Type,
            isSuccessful = culture.IsSuccessful() is null ? null : ":" + culture.IsSuccessful(),
            isPurchase   = culture.IsPurchase()
        };
        
        session.CreateCulture(obj.cultureName, obj.isSuccessful, obj.cultureType, obj.isSuccessful);
        session.CreateLocation(culture.Location.ToString());

        /*
         if (string.IsNullOrEmpty(culture.Parent))
        {
            session.CreateRelationship();
        }
        */
        
        var query = $@" MATCH 
                             (c:Culture{obj.isSuccessful}{obj.cultureType}{obj.isPurchase} {{ Name: '{obj.cultureName}' }}),
                             (l:Location {{ Name: '{culture.Location}'}})
                        MERGE
                            (c)-[:STORED_IN]->(l)";
        
        session.WriteToDatabase(query);

        /*
        session.WriteToDatabase(
         $@"MATCH 
                (c:Culture{culture.IsSuccessful()}{':' + culture.Type}{culture.IsPurchase()} {{ Name: '{culture.Name}' }}),
                (p:)
            MERGE
                (c)-[:HAS_PARENT]->(p)"
        );
        */
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
